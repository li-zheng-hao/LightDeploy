@using Serilog
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@implements IDisposable
<div Id="root-layout-box">
    <MudLayout>
        <MudAppBar Color="Color.Primary" >
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="toggle" />
            <MudText>@pageTitle</MudText>
            <MudSpacer />
            <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" />
        </MudAppBar>
        <MudDrawer @bind-Open="open">
            <div id="app-logo" style="display: flex;align-items: center;justify-content: center;height: 80px">
                 <MudIcon Icon="@Icons.Material.Filled.LocalShipping" Color="Color.Primary" Size="Size.Large"></MudIcon>
                <MudText Color="Color.Primary" Style="letter-spacing: .2rem;font-weight: 400;margin-inline-start: 12px;font-size: 24px;user-select: none">LightDeploy</MudText>
            </div>
         
            <MudNavMenu>
                <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Backup">服务发布</MudNavLink>
                <MudNavLink Href="/service-config" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.BorderAll">服务配置</MudNavLink>
            </MudNavMenu>
        </MudDrawer>
        <MudMainContent >
            <div style="padding: 10px" id="main-layout-content-root-box">
                @Body
            </div>
        </MudMainContent>
    </MudLayout>
</div>


<div id="blazor-error-ui">
    与服务器的连接已断开,正在重连...
    <a href="" class="reload">重新加载</a>
    <a class="dismiss">🗙</a>
</div>


@code {
    bool open=true;
    string title => open ? "LZH" : "服务发布工具";
    void toggle()
    {
        open = !open;
    }

    string pageTitle="服务发布";
    

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += LocationChanged;
        base.OnInitialized();
    }

    private void LocationChanged(object? sender, LocationChangedEventArgs e)
    {
        var currentLocation=e.Location;
        Log.Information($"跳转到页面{currentLocation}");
        var query = new Uri(currentLocation).PathAndQuery;
        switch (query)
        {
            case "/service-config":
                pageTitle = "服务配置";
                break;
            case "/global-config":
                pageTitle = "全局配置";
                break;
            default:
                pageTitle = "服务发布";
                break;
        }
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= LocationChanged;
    }

}