@using LightDeploy.Server.Core
@using LightDeploy.Server.Domain
@using Masuit.Tools
@using Serilog
@inject LdDbContext DbClient
@inject  ISnackbar Message
<MudDialog>
    <DialogContent >
        <MudGrid>
            <MudItem lg="12">
                <MudForm @ref="form">
                    <MudTextField Label="Ip" T="string" Required RequiredError="IP不能为空" @bind-Value="_newDeployTarget.Host">
                    </MudTextField>
                    <MudNumericField Label="Port" T="string" Required RequiredError="端口不能为空" @bind-Value="_newDeployTarget.Port">
                    </MudNumericField>
                    <MudTextField Label="健康检查Url" T="string" @bind-Value="_newDeployTarget.HealthCheckUrl">
                    </MudTextField>
                    <MudTextField Label="权限认证Key" T="string" @bind-Value="_newDeployTarget.AuthKey">
                    </MudTextField>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false" OnClick="Add" Class="mt-4">新增</MudButton>
                </MudForm>
            </MudItem>
            
            <MudItem lg="12" Class="mb-4">
                <MudGrid>
                    <MudItem xs="12">
                        <MudTable Items="@_deployTargets" Hover="true" Breakpoint="Breakpoint.Lg"  >
                            <HeaderContent>
                                <MudTh>编号</MudTh>
                                <MudTh>IP</MudTh>
                                <MudTh>端口号</MudTh>
                                <MudTh>健康检查地址</MudTh>
                                <MudTh>权限Key</MudTh>
                                <MudTh>操作</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="编号">@context.Id</MudTd>
                                <MudTd DataLabel="IP">@context.Host</MudTd>
                                <MudTd DataLabel="端口号">@context.Port</MudTd>
                                <MudTd DataLabel="健康检查地址">@context.HealthCheckUrl</MudTd>
                                <MudTd DataLabel="权限Key" >@context.AuthKey</MudTd>
                                <MudTd DataLabel="操作">
                                    <MudButton Variant="Variant.Filled" Color="@Color.Error" OnClick="()=>DeleteDeployTarget(context)">删除</MudButton>
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudItem>
                </MudGrid>
            </MudItem>
        </MudGrid>

    </DialogContent>
</MudDialog>

@code {

    DeployTarget _newDeployTarget = new();
    [Parameter] public DeployService DeployService { get; set; }

    List<DeployTarget> _deployTargets;
    private MudForm form;
    
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        FetchData();
    }

    public void FetchData()
    {
        _deployTargets = DbClient.Set<DeployTarget>().Where(it => it.ServiceId == DeployService.Id).ToList();
        Log.Information($"查询到{_deployTargets.Count}条");
    }

    async Task Add()
    {
        await form.Validate();
        if (!form.IsValid)
        {
            Message.Add("填写的数据存在错误", Severity.Error);
            return;
        }
        var exist = DbClient.Set<DeployTarget>().Any(it => it.ServiceId == DeployService.Id && it.Host == _newDeployTarget.Host && it.Port == _newDeployTarget.Port);

        if (exist)
        {
            Message.Add("该服务已经存在相同的IP和端口的发布目标", Severity.Error);
        }
        else
        {
            _newDeployTarget.ServiceId = DeployService.Id;
            DbClient.Add(_newDeployTarget);
            DbClient.SaveChanges();
            FetchData();
        }
    }


    void DeleteDeployTarget(DeployTarget deployTarget)
    {
        DbClient.Remove(deployTarget);
        DbClient.SaveChanges();
        FetchData();
        Message.Add("删除成功", Severity.Success);
    }

}