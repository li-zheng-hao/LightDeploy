@using LightDeploy.Server.Domain

<Form Model="@AddOrUpdateServiceModel" LabelColSpan="8"
      ValidateOnChange
      @ref="form"
      WrapperColSpan="16">
    <FormItem Label="环境" Required>
        <SimpleSelect @bind-Value="@context.EnvironmentName">
            <SelectOptions>
                <SimpleSelectOption Label="开发" Value="开发"></SimpleSelectOption>
                <SimpleSelectOption Label="开发测试" Value="开发测试"></SimpleSelectOption>
                <SimpleSelectOption Label="测试" Value="测试"></SimpleSelectOption>
                <SimpleSelectOption Label="预览" Value="预览"></SimpleSelectOption>
                <SimpleSelectOption Label="生产" Value="生产"></SimpleSelectOption>
            </SelectOptions>
        </SimpleSelect>
    </FormItem>
    <FormItem Label="分组">
        <Input @bind-Value="@context.GroupName" ></Input>
    </FormItem>
    <FormItem Label="服务名">
        <Input @bind-Value="@context.Name" ></Input>
    </FormItem>
    <FormItem Label="服务说明">
        <Input @bind-Value="@context.Description" ></Input>
    </FormItem>
    <FormItem Label="发布方式">
        <Select @bind-Value="@context.DeployMode" DataSource="DeployModes" TItem="DeployMode" TItemValue="int"
                ItemValue="c=>c.Value"
                ItemLabel="c=>c.Label"
        >
        </Select>
    </FormItem>
    <FormItem Label="项目路径">
        <Input @bind-Value="@context.ProjectPath" ></Input>
    </FormItem>
    <FormItem Label="包含运行时">
        <Switch @bind-Value="@context.IsSelfContained"></Switch>
    </FormItem>
    <FormItem Label="健康检查">
        <Switch @bind-Value="@context.EnableHealthCheck"></Switch>
    </FormItem>
    <FormItem Label="端口">
        <AntDesign.InputNumber @bind-Value="@context.Port" ></AntDesign.InputNumber>
    </FormItem>
    <FormItem Label="仅拷贝文件并重启服务">
        <Switch @bind-Checked="OnlyCopyFiles" ></Switch>
    </FormItem>
    <FormItem Label="目标文件夹">
        <Input @bind-Value="@context.TargetDir" Placeholder="仅在拷贝文件并重启服务选项开启的情况下有效"></Input>
    </FormItem>
    <FormItem Label="忽略规则(Regex表达式)">
        <Input @bind-Value="@context.IgnoreRules" Placeholder="忽略规则，用|分割"></Input>
    </FormItem>
</Form>
@code {

    class DeployMode
    {
        public string Label { get; set; }
        public int Value { get; set; }
    }
    private Form<DeployService> form;
    
    List<DeployMode> DeployModes = new()
    {
        new DeployMode() { Label = "项目", Value = 0 },
        new DeployMode() { Label = "文件夹", Value = 1 }
    };

    public bool Validate()
    {
        return form.Validate();      
    }
    [Parameter]
    public DeployService AddOrUpdateServiceModel { get; set; } = null!;

    private bool OnlyCopyFiles
    {
        get
        {
            return AddOrUpdateServiceModel.OnlyCopyFiles ?? false;
        }
        set
        {
            AddOrUpdateServiceModel.OnlyCopyFiles = value;
        }
    }
}