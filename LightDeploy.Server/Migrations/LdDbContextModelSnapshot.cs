// <auto-generated />
using System;
using LightDeploy.Server.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LightDeploy.Server.Migrations
{
    [DbContext(typeof(LdDbContext))]
    partial class LdDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("LightDeploy.Server.Domain.DeployHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PublishTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DeployHistory");
                });

            modelBuilder.Entity("LightDeploy.Server.Domain.DeployService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BeforeScript")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeployMode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EnableHealthCheck")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("EnableNotify")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnvironmentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IgnoreRules")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSelfContained")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("OnlyCopyFiles")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetDir")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DeployService");
                });

            modelBuilder.Entity("LightDeploy.Server.Domain.DeployTarget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("HealthCheckUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Port")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DeployTarget");
                });

            modelBuilder.Entity("LightDeploy.Server.Domain.GlobalSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("QiyeWeChatKey")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GlobalSetting");
                });
#pragma warning restore 612, 618
        }
    }
}
